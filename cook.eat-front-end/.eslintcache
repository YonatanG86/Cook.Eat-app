[{"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\reportWebVitals.js":"1","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ProfileSettings.js":"2","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js":"3","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\index.js":"4","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\Recipe.js":"5","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SignUpModal.js":"6","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\LoginModal.js":"7","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RegistrationCarousel.js":"8","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\recipeSearchCard.jsx":"9","C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\HomePage.js":"10"},{"size":362,"mtime":1606461997768,"results":"11","hashOfConfig":"12"},{"size":4209,"mtime":1610877265198,"results":"13","hashOfConfig":"12"},{"size":5108,"mtime":1610877265195,"results":"14","hashOfConfig":"12"},{"size":302,"mtime":1610877265202,"results":"15","hashOfConfig":"12"},{"size":196,"mtime":1610877265199,"results":"16","hashOfConfig":"12"},{"size":936,"mtime":1611475206484,"results":"17","hashOfConfig":"12"},{"size":3305,"mtime":1611475206479,"results":"18","hashOfConfig":"12"},{"size":7887,"mtime":1611475206482,"results":"19","hashOfConfig":"12"},{"size":766,"mtime":1611490847991,"results":"20","hashOfConfig":"12"},{"size":710,"mtime":1611490886536,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m7hya2",{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ProfileSettings.js",["44","45","46","47","48"],"import React, { useState } from \"react\";\r\nimport { Col, Form, Button } from \"react-bootstrap\";\r\nimport { CountryDropdown } from \"react-country-region-selector\";\r\n\r\nconst ProfileSettings = () => {\r\n    const [email, setEmail] = useState(\"\"); // This should already exist from the sign up\r\n    const [password, setPassword] = useState(\"\"); // This should already exist from the sign up\r\n    const [username, setUsername] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    \r\n    return (\r\n        <>\r\n        <h1>Profile Settings</h1>\r\n        <Form onSubmit>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                className=\"form-input\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                className=\"form-input\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                className=\"form-input\"\r\n                name=\"username\"\r\n                type=\"username\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <div className=\"row-container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <Form.Group controlId=\"dob\">\r\n                  <Form.Label>Birth Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    placeholder=\"Date of Birth\"\r\n                    value={date}\r\n                    onChange />\r\n                </Form.Group>\r\n              </div>\r\n            </div>\r\n            <div className=\"country-select-container\">\r\n              <CountryDropdown\r\n                value={country}\r\n                onChange >\r\n              </CountryDropdown>\r\n            </div>\r\n\r\n            {/* <div className=\"phone-input-container\">\r\n              <Form.Group as={Col} md=\"12\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <PhoneInput\r\n                  type=\"phone-number\"\r\n                  placeholder=\"Enter phone number\"\r\n                  name=\"phone-number\"\r\n                  value={toString(phone)}\r\n                  onChange={(phone) => setPhone({ phone })} />\r\n              </Form.Group>\r\n            </div> */}\r\n          </div>\r\n\r\n          {/* <Form.Group className=\"textarea-container\">\r\n            <Form.Label>Biography</Form.Label>\r\n            <Form.Control\r\n              className=\"form-input\"\r\n              name=\"text\"\r\n              placeholder=\"You can share your past extraterrestrial experience here.\"\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={text}\r\n              onChange={(event) => handleTextChange(event)} />\r\n          </Form.Group> */}\r\n\r\n          <Form.Group id=\"formGridCheckbox\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              name=\"checkbox\"\r\n              label=\"Save Profile Changes\"\r\n              checked={isChecked}\r\n              onChange={(event) => {setIsChecked(event.target.checked)}} />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            className=\"save-profile-button\"\r\n            controlId=\"save-profile-button\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isChecked ? false : true}>\r\n            Ok\r\n          </Button>\r\n        </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileSettings;",["49","50"],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js",[],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\index.js",[],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\Recipe.js",[],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SignUpModal.js",[],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\LoginModal.js",["51","52","53"],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RegistrationCarousel.js",["54"],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\recipeSearchCard.jsx",[],"C:\\Users\\yonat\\Documents\\ITC\\Projects\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\HomePage.js",["55"],{"ruleId":"56","severity":1,"message":"57","line":6,"column":19,"nodeType":"58","messageId":"59","endLine":6,"endColumn":27},{"ruleId":"56","severity":1,"message":"60","line":7,"column":22,"nodeType":"58","messageId":"59","endLine":7,"endColumn":33},{"ruleId":"56","severity":1,"message":"61","line":8,"column":22,"nodeType":"58","messageId":"59","endLine":8,"endColumn":33},{"ruleId":"56","severity":1,"message":"62","line":9,"column":18,"nodeType":"58","messageId":"59","endLine":9,"endColumn":25},{"ruleId":"56","severity":1,"message":"63","line":10,"column":21,"nodeType":"58","messageId":"59","endLine":10,"endColumn":31},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"56","severity":1,"message":"68","line":14,"column":10,"nodeType":"58","messageId":"59","endLine":14,"endColumn":17},{"ruleId":"56","severity":1,"message":"69","line":14,"column":19,"nodeType":"58","messageId":"59","endLine":14,"endColumn":29},{"ruleId":"56","severity":1,"message":"70","line":18,"column":9,"nodeType":"58","messageId":"59","endLine":18,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":200,"column":15,"nodeType":"73","endLine":204,"endColumn":17},{"ruleId":"56","severity":1,"message":"74","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},"no-unused-vars","'setEmail' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setCountry' is assigned a value but never used.","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]