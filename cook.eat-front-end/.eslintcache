[{"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\index.js":"1","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\HomePage.js":"2","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ProfileSettings.js":"3","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js":"4","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MyRecipes.js":"5","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SavedRecipes.js":"6","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipePage.jsx":"7","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Conteaxts\\autoConteaxt.js":"8","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ingredient.js":"9","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\Steps.js":"10","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AuthenticationPage.js":"11"},{"size":302,"mtime":1610876889222,"results":"12","hashOfConfig":"13"},{"size":1286,"mtime":1611509646926,"results":"14","hashOfConfig":"13"},{"size":7447,"mtime":1611509646929,"results":"15","hashOfConfig":"13"},{"size":11388,"mtime":1611578362966,"results":"16","hashOfConfig":"13"},{"size":285,"mtime":1611509646927,"results":"17","hashOfConfig":"13"},{"size":300,"mtime":1611509646931,"results":"18","hashOfConfig":"13"},{"size":1876,"mtime":1611509646930,"results":"19","hashOfConfig":"13"},{"size":3784,"mtime":1611572332676,"results":"20","hashOfConfig":"13"},{"size":1512,"mtime":1611571099348,"results":"21","hashOfConfig":"13"},{"size":636,"mtime":1611576067866,"results":"22","hashOfConfig":"13"},{"size":1216,"mtime":1610876889217,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1obo727",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\index.js",[],["48","49"],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\HomePage.js",["50","51","52"],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ProfileSettings.js",["53","54","55","56","57","58","59"],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js",["60","61","62","63"],"import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Ingredient from \"./ingredient\";\r\nimport Steps from \"./Steps\";\r\nimport { useAuth } from \"../Conteaxts/autoConteaxt\";\r\nimport \"../styles/AddRecipe.css\";\r\nimport { Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nconst formFields = {\r\n  recipeTitle: \"\",\r\n  description: \"\",\r\n  cuisineType: \"\",\r\n  dietType: \"\",\r\n  preparationTime: 0,\r\n  servings: 0,\r\n  ingredients: [],\r\n  steps: [],\r\n  calories: 0,\r\n  dishLevel: \"\",\r\n  mealType: \"\",\r\n  writer: \"\",\r\n};\r\nconst AddRecipe = () => {\r\n  const types = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n  const { addRecipe } = useAuth();\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [formInfo, setFormInfo] = useState(formFields);\r\n  const [ingredient, setIngred] = useState();\r\n  const [file, setFile] = useState();\r\n  const [recipeImage, setRecipeImage] = useState();\r\n  const [ingredients, setIngredients] = useState([{}]);\r\n  const [step, setStep] = useState();\r\n  const [steps, setSteps] = useState([\"\"]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormInfo({\r\n      ...formInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && types.includes(file.type)) {\r\n      setFile(file);\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setRecipeImage(e.target.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      notifyError(\"Please select an image file (png, jpg, jpeg)\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    saveIngredient();\r\n    let formData = new FormData();\r\n    formData.append(\"data\", JSON.stringify(formInfo));\r\n    formData.append(\"picture\", file);\r\n    addRecipe(FormData);\r\n  };\r\n\r\n  // on change in Ingredient input\r\n  const onIngredient = (e) => {\r\n    setIngred({\r\n      ...ingredient,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // on change in step input\r\n  const onStepChange = (e) => {\r\n    setStep(e.target.value);\r\n  };\r\n\r\n  //save the last ingredient and remove undefineds items\r\n  const saveIngredient = () => {\r\n    if (steps.length === 0 || ingredients.length === 0)\r\n      notifyError(\"ðŸ“‹ What about preparation instructions or ingredients?\");\r\n    else {\r\n      ingredients.push(ingredient);\r\n      steps.push(step);\r\n      formInfo.ingredients = ingredients.filter(\r\n        (item) => Object.keys(item).length !== 0\r\n      );\r\n      formInfo.steps = steps.filter((item) => item !== \"\");\r\n      setIngredients([]);\r\n      setSteps([]);\r\n    }\r\n  };\r\n\r\n  // add Ingredient to list\r\n  const addIngredient = () => {\r\n    if (ingredient || ingredients.length === 0) {\r\n      setIngredients((ingredients) => [...ingredients, ingredient]);\r\n      setIngred(\"\");\r\n    }\r\n  };\r\n\r\n  // remove Ingredient from list\r\n  const removeIngredient = (id) => {\r\n    const newIngredients = ingredients.filter((item, index) => {\r\n      return index !== id;\r\n    });\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  const addStep = () => {\r\n    if (step || steps.length === 0) {\r\n      setSteps((steps) => [...steps, step]);\r\n      setStep(\"\");\r\n    }\r\n  };\r\n\r\n  const removeStep = (id) => {\r\n    const newsteps = steps.filter((item, index) => {\r\n      return index !== id;\r\n    });\r\n    setSteps(newsteps);\r\n  };\r\n\r\n  const notifyError = (error) =>\r\n    toast.error(error, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  const notifySuccess = (message) =>\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  return (\r\n    <div className=\"add-recipe-form-container\">\r\n      <ToastContainer className=\"notification\" />\r\n      <Form validated className=\"recipe-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group>\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            name=\"recipeTitle\"\r\n            type=\"title\"\r\n            placeholder=\"Title\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            name=\"description\"\r\n            as=\"textarea\"\r\n            rows={3}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"add-group\">\r\n          <div className=\"left-box\">\r\n            <Form.Label>Type of Cuisine</Form.Label>\r\n            <Form.Control\r\n              name=\"cuisineType\"\r\n              as=\"select\"\r\n              className=\"type-diet dropdown-link\"\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"\" selected disabled>\r\n                your type of cuisine\r\n              </option>\r\n              <option>American</option>\r\n              <option>Brazilian</option>\r\n              <option>Caribbean</option>\r\n              <option>Chinese</option>\r\n              <option>English</option>\r\n              <option>Ethiopian</option>\r\n              <option>French</option>\r\n              <option>Filipino</option>\r\n              <option>Georgian</option>\r\n              <option>German</option>\r\n              <option>Greek</option>\r\n              <option>Indian</option>\r\n              <option>Indonesian</option>\r\n              <option>Italian</option>\r\n              <option>Jamaican</option>\r\n              <option>Japanese</option>\r\n              <option>Jewish</option>\r\n              <option>Korean</option>\r\n              <option>Mexican</option>\r\n              <option>Polish</option>\r\n              <option>Persian</option>\r\n              <option>Portuguese</option>\r\n              <option>Russian</option>\r\n              <option>Spanish</option>\r\n              <option>Thai</option>\r\n              <option>Vietnamese</option>\r\n            </Form.Control>\r\n          </div>\r\n          <div className=\"middle-box\">\r\n            <Form.Label>Type of Diet</Form.Label>\r\n            <Form.Control\r\n              name=\"dietType\"\r\n              as=\"select\"\r\n              className=\"type-diet dropdown-link\"\r\n              onChange={handleChange}\r\n            >\r\n              <option>None</option>\r\n              <option>Gluten-Free</option>\r\n              <option>Halal</option>\r\n              <option>Keto</option>\r\n              <option>Kosher</option>\r\n              <option>Paleo</option>\r\n              <option>Pescaterian</option>\r\n              <option>Vegan</option>\r\n              <option>Vegeterian</option>\r\n            </Form.Control>\r\n          </div>\r\n          <div className=\"rigth-box\">\r\n            <Form.Label>Dish Level</Form.Label>\r\n            <Form.Control\r\n              name=\"dishLevel\"\r\n              as=\"select\"\r\n              className=\"type-diet dropdown-link\"\r\n              onChange={handleChange}\r\n            >\r\n              <option>None</option>\r\n              <option>Beginners</option>\r\n              <option>Amateurs</option>\r\n              <option>Professional</option>\r\n            </Form.Control>\r\n          </div>\r\n          <div className=\"last-box\">\r\n            <Form.Label>Meal Type</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name=\"mealType\"\r\n              as=\"select\"\r\n              className=\"type-diet dropdown-link\"\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" selected disabled>\r\n                meal Type\r\n              </option>\r\n              <option>Breakfast</option>\r\n              <option>Lunch</option>\r\n              <option>Dinner</option>\r\n            </Form.Control>\r\n          </div>\r\n        </Form.Group>\r\n        <div className=\"add-group\">\r\n          <div className=\"left-box\">\r\n            <Form.Label>Preparation Time</Form.Label>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                name=\"preparationTime\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                placeholder=\"time in minutes...\"\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>min</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </div>\r\n          <div className=\"middle-box\">\r\n            <Form.Label>Number of Servings</Form.Label>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                name=\"servings\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                placeholder=\"number of servings...\"\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>Diners</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </div>\r\n          <div className=\"right-box\">\r\n            <Form.Label>Calories</Form.Label>\r\n            <InputGroup className=\"mb-3\">\r\n              <Form.Control\r\n                name=\"calories\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                placeholder=\"Calories...\"\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>cal</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n\r\n        <Button\r\n          className=\"add-ingredient-btn\"\r\n          type=\"button\"\r\n          onClick={addIngredient}\r\n        >\r\n          Add ingredient\r\n          <img src=\"./addRecipe/plus.png\" alt=\"+\" />\r\n        </Button>\r\n        {ingredients.map((item, index) => {\r\n          return (\r\n            <Ingredient\r\n              key={index}\r\n              addIngredient={onIngredient}\r\n              removeIngredient={removeIngredient}\r\n              id={index}\r\n            />\r\n          );\r\n        })}\r\n        <Button\r\n          className=\"add-ingredient-btn steps-btn\"\r\n          type=\"button\"\r\n          onClick={addStep}\r\n        >\r\n          Add steps\r\n          <img src=\"./addRecipe/plus.png\" alt=\"+\" />\r\n        </Button>\r\n        {steps.map((item, index) => {\r\n          return (\r\n            <Steps\r\n              key={index}\r\n              removeStep={removeStep}\r\n              onStepChange={onStepChange}\r\n              id={index}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <Form.Group className=\"upload-img mt-3\">\r\n          <Form.File\r\n            name=\"picture\"\r\n            label=\"Upload a picture\"\r\n            className=\"file\"\r\n            onChange={handleFileUpload}\r\n          />\r\n          <img src={recipeImage} alt=\"\" />\r\n        </Form.Group>\r\n\r\n        <Button className=\"add-recipe-btn\" type=\"submit\">\r\n          Submit your Recipe\r\n        </Button>\r\n      </Form>\r\n      <img\r\n        className=\"add-recipe-img\"\r\n        src=\"./addRecipe/add_recipe.jpg\"\r\n        alt=\"add-recipe\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRecipe;\r\n","C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MyRecipes.js",[],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SavedRecipes.js",[],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipePage.jsx",[],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Conteaxts\\autoConteaxt.js",["64","65","66"],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ingredient.js",[],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\Steps.js",["67"],"C:\\Users\\isaya\\OneDrive\\×©×•×œ×—×Ÿ ×”×¢×‘×•×“×”\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AuthenticationPage.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":28},{"ruleId":"72","severity":1,"message":"78","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":23},{"ruleId":"72","severity":1,"message":"79","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":12},{"ruleId":"72","severity":1,"message":"80","line":10,"column":19,"nodeType":"74","messageId":"75","endLine":10,"endColumn":27},{"ruleId":"72","severity":1,"message":"81","line":11,"column":22,"nodeType":"74","messageId":"75","endLine":11,"endColumn":33},{"ruleId":"72","severity":1,"message":"82","line":12,"column":22,"nodeType":"74","messageId":"75","endLine":12,"endColumn":33},{"ruleId":"72","severity":1,"message":"83","line":13,"column":18,"nodeType":"74","messageId":"75","endLine":13,"endColumn":25},{"ruleId":"72","severity":1,"message":"84","line":14,"column":21,"nodeType":"74","messageId":"75","endLine":14,"endColumn":31},{"ruleId":"72","severity":1,"message":"85","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"86","line":28,"column":11,"nodeType":"74","messageId":"75","endLine":28,"endColumn":19},{"ruleId":"72","severity":1,"message":"87","line":28,"column":35,"nodeType":"74","messageId":"75","endLine":28,"endColumn":41},{"ruleId":"72","severity":1,"message":"88","line":136,"column":9,"nodeType":"74","messageId":"75","endLine":136,"endColumn":22},{"ruleId":"72","severity":1,"message":"85","line":1,"column":39,"nodeType":"74","messageId":"75","endLine":1,"endColumn":48},{"ruleId":"72","severity":1,"message":"89","line":13,"column":10,"nodeType":"74","messageId":"75","endLine":13,"endColumn":17},{"ruleId":"72","severity":1,"message":"90","line":13,"column":19,"nodeType":"74","messageId":"75","endLine":13,"endColumn":29},{"ruleId":"72","severity":1,"message":"91","line":2,"column":18,"nodeType":"74","messageId":"75","endLine":2,"endColumn":22},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'RegistrationCarousel' is defined but never used.","'TypesOfCuisines' is defined but never used.","'Keto' is defined but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'useEffect' is defined but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'notifySuccess' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]