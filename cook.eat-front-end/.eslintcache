[{"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/reportWebVitals.js":"1","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/SignUpModal.js":"2","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/LoginModal.js":"3","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/AddRecipe.js":"4","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/ingredient.js":"5","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/libs/utils.js":"6","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/libs/cuisine.js":"7","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/RegistrationCarousel.js":"8","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Conteaxts/autoConteaxt.js":"9","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/ProfileSettings.js":"10","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/MyRecipes.js":"11","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/MyRecipesCard.js":"12","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/PPTypesOfCuisines.js":"13","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselCulinaryLevel.js":"14","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselSignUp.js":"15","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselTypesOfCuisines.js":"16","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselSpecialDiets.js":"17","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/NavigationBar.js":"18","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/SavedRecipes.js":"19","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/RecipeCard.js":"20"},{"size":362,"mtime":1611072545167,"results":"21","hashOfConfig":"22"},{"size":1584,"mtime":1611654603026,"results":"23","hashOfConfig":"22"},{"size":3095,"mtime":1611599365432,"results":"24","hashOfConfig":"22"},{"size":11900,"mtime":1611734025106,"results":"25","hashOfConfig":"22"},{"size":1451,"mtime":1611595108990,"results":"26","hashOfConfig":"22"},{"size":1629,"mtime":1611734025116,"results":"27","hashOfConfig":"22"},{"size":3710,"mtime":1611595108994,"results":"28","hashOfConfig":"22"},{"size":2061,"mtime":1611735761920,"results":"29","hashOfConfig":"22"},{"size":4240,"mtime":1611734025116,"results":"30","hashOfConfig":"22"},{"size":9757,"mtime":1611734025114,"results":"31","hashOfConfig":"22"},{"size":953,"mtime":1611687230601,"results":"32","hashOfConfig":"22"},{"size":2036,"mtime":1611734025112,"results":"33","hashOfConfig":"22"},{"size":16896,"mtime":1611658144511,"results":"34","hashOfConfig":"22"},{"size":2784,"mtime":1611735793913,"results":"35","hashOfConfig":"22"},{"size":5105,"mtime":1611735797019,"results":"36","hashOfConfig":"22"},{"size":21446,"mtime":1611735786191,"results":"37","hashOfConfig":"22"},{"size":3803,"mtime":1611735789226,"results":"38","hashOfConfig":"22"},{"size":2724,"mtime":1611658889502,"results":"39","hashOfConfig":"22"},{"size":1111,"mtime":1611734025115,"results":"40","hashOfConfig":"22"},{"size":445,"mtime":1611658251268,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1s1jref",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/reportWebVitals.js",[],["85","86"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/SignUpModal.js",["87"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/LoginModal.js",["88","89","90","91"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/AddRecipe.js",["92","93","94"],"import React, { useState, useEffect } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useForm } from \"react-hook-form\";\nimport Ingredient from \"./ingredient\";\nimport Steps from \"./Steps\";\nimport { useAuth } from \"../Conteaxts/autoConteaxt\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../styles/AddRecipe.css\";\nimport { BounceLoader } from \"react-spinners\";\nimport { css } from \"@emotion/react\";\nimport { Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\n\nconst override = css`\n  position: fixed;\n  top: 40%;\n  left: 30%;\n  border-color: red;\n`;\n\nconst formFields = {\n  recipeTitle: \"\",\n  description: \"\",\n  cuisineType: \"\",\n  dietType: \"\",\n  preparationTime: 0,\n  servings: 0,\n  ingredients: [],\n  steps: [],\n  calories: 0,\n  dishLevel: \"\",\n  mealType: \"\",\n  writer: localStorage.getItem(\"user\"),\n};\nconst AddRecipe = () => {\n  const types = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n  const history = useHistory();\n  const [disabled, setDisabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { addRecipe } = useAuth();\n  const { register, handleSubmit, errors } = useForm();\n  const [formInfo, setFormInfo] = useState(formFields);\n  const [ingredient, setIngred] = useState();\n  const [file, setFile] = useState();\n  const [recipeImage, setRecipeImage] = useState();\n  const [ingredients, setIngredients] = useState([{}]);\n  const [step, setStep] = useState();\n  const [steps, setSteps] = useState([\"\"]);\n\n  const handleChange = (e) => {\n    setFormInfo({\n      ...formInfo,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file && types.includes(file.type)) {\n      setFile(file);\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        setRecipeImage(e.target.result);\n      };\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      notifyError(\"Please select an image file (png, jpg, jpeg)\");\n    }\n  };\n\n  const onSubmit = async (data, e) => {\n    e.preventDefault();\n    setLoading(true);\n    setDisabled(true);\n    const res = saveIngredient();\n    if (res) {\n      let formData = new FormData();\n      formData.append(\"data\", JSON.stringify(formInfo));\n      formData.append(\"picture\", file);\n      const result = await addRecipe(formData);\n      if (result) {\n        notifySuccess(\"Your recipe🥝has been successfully saved!\");\n        history.push(\"/my-recipes\");\n      }\n      setLoading(false);\n      setDisabled(false);\n    }\n  };\n\n  // on change in Ingredient input\n  const onIngredient = (e) => {\n    setIngred({\n      ...ingredient,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // on change in step input\n  const onStepChange = (e) => {\n    setStep(e.target.value);\n  };\n\n  //save the last ingredient and remove undefineds items\n  const saveIngredient = () => {\n    if (steps.length === 0 || ingredients.length === 0) {\n      notifyError(\"📋 What about preparation instructions or ingredients?\");\n      return false;\n    } else {\n      ingredients.push(ingredient);\n      steps.push(step);\n      formInfo.ingredients = ingredients.filter(\n        (item) => Object.keys(item).length !== 0\n      );\n      formInfo.steps = steps.filter((item) => item !== \"\");\n      setIngredients([]);\n      setSteps([]);\n      return true;\n    }\n  };\n\n  // add Ingredient to list\n  const addIngredient = () => {\n    if (ingredient || ingredients.length === 0) {\n      setIngredients((ingredients) => [...ingredients, ingredient]);\n      setIngred(\"\");\n    }\n  };\n\n  // remove Ingredient from list\n  const removeIngredient = (id) => {\n    const newIngredients = ingredients.filter((item, index) => {\n      return index !== id;\n    });\n    setIngredients(newIngredients);\n  };\n\n  const addStep = () => {\n    if (step || steps.length === 0) {\n      setSteps((steps) => [...steps, step]);\n      setStep(\"\");\n    }\n  };\n\n  const removeStep = (id) => {\n    const newsteps = steps.filter((item, index) => {\n      return index !== id;\n    });\n    setSteps(newsteps);\n  };\n\n  const notifyError = (error) =>\n    toast.error(error, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  const notifySuccess = (message) =>\n    toast.success(message, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  return (\n    <div className=\"add-recipe-form-container\">\n      <ToastContainer className=\"notification\" />\n      <Form validated className=\"recipe-form\" onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            name=\"recipeTitle\"\n            type=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            name=\"description\"\n            as=\"textarea\"\n            rows={3}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"add-group\">\n          <div className=\"left-box\">\n            <Form.Label>Type of Cuisine</Form.Label>\n            <Form.Control\n              name=\"cuisineType\"\n              as=\"select\"\n              className=\"type-diet dropdown-link\"\n              onChange={handleChange}\n              required\n            >\n              <option value=\"\" selected disabled>\n                your type of cuisine\n              </option>\n              <option>American</option>\n              <option>Brazilian</option>\n              <option>Caribbean</option>\n              <option>Chinese</option>\n              <option>English</option>\n              <option>Ethiopian</option>\n              <option>French</option>\n              <option>Filipino</option>\n              <option>Georgian</option>\n              <option>German</option>\n              <option>Greek</option>\n              <option>Indian</option>\n              <option>Indonesian</option>\n              <option>Italian</option>\n              <option>Jamaican</option>\n              <option>Japanese</option>\n              <option>Jewish</option>\n              <option>Korean</option>\n              <option>Mexican</option>\n              <option>Polish</option>\n              <option>Persian</option>\n              <option>Portuguese</option>\n              <option>Russian</option>\n              <option>Spanish</option>\n              <option>Thai</option>\n              <option>Vietnamese</option>\n            </Form.Control>\n          </div>\n          <div className=\"middle-box\">\n            <Form.Label>Type of Diet</Form.Label>\n            <Form.Control\n              name=\"dietType\"\n              as=\"select\"\n              className=\"type-diet dropdown-link\"\n              onChange={handleChange}\n            >\n              <option>None</option>\n              <option>Gluten-Free</option>\n              <option>Halal</option>\n              <option>Keto</option>\n              <option>Kosher</option>\n              <option>Paleo</option>\n              <option>Pescaterian</option>\n              <option>Vegan</option>\n              <option>Vegeterian</option>\n            </Form.Control>\n          </div>\n          <div className=\"rigth-box\">\n            <Form.Label>Dish Level</Form.Label>\n            <Form.Control\n              name=\"dishLevel\"\n              as=\"select\"\n              className=\"type-diet dropdown-link\"\n              onChange={handleChange}\n            >\n              <option>None</option>\n              <option>Beginners</option>\n              <option>Amateurs</option>\n              <option>Professional</option>\n            </Form.Control>\n          </div>\n          <div className=\"last-box\">\n            <Form.Label>Meal Type</Form.Label>\n            <Form.Control\n              required\n              name=\"mealType\"\n              as=\"select\"\n              className=\"type-diet dropdown-link\"\n              onChange={handleChange}\n            >\n              <option value=\"\" selected disabled>\n                meal Type\n              </option>\n              <option>Breakfast</option>\n              <option>Lunch</option>\n              <option>Dinner</option>\n            </Form.Control>\n          </div>\n        </Form.Group>\n        <div className=\"add-group\">\n          <div className=\"left-box\">\n            <Form.Label>Preparation Time</Form.Label>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                name=\"preparationTime\"\n                type=\"number\"\n                onChange={handleChange}\n                min=\"1\"\n                placeholder=\"time in minutes...\"\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>min</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n          <div className=\"middle-box\">\n            <Form.Label>Number of Servings</Form.Label>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                name=\"servings\"\n                type=\"number\"\n                onChange={handleChange}\n                min=\"1\"\n                placeholder=\"number of servings...\"\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>Diners</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n          <div className=\"right-box\">\n            <Form.Label>Calories</Form.Label>\n            <InputGroup className=\"mb-3\">\n              <Form.Control\n                name=\"calories\"\n                type=\"number\"\n                onChange={handleChange}\n                min=\"1\"\n                placeholder=\"Calories...\"\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>cal</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n        </div>\n\n        {ingredients.map((item, index) => {\n          return (\n            <Ingredient\n              key={index}\n              addIngredient={onIngredient}\n              removeIngredient={removeIngredient}\n              id={index}\n            />\n          );\n        })}\n        <Button\n          className=\"add-ingredient-btn\"\n          type=\"button\"\n          onClick={addIngredient}\n        >\n          Add ingredient\n          <img src=\"./addRecipe/plus.png\" alt=\"+\" />\n        </Button>\n        {steps.map((item, index) => {\n          return (\n            <Steps\n              key={index}\n              removeStep={removeStep}\n              onStepChange={onStepChange}\n              id={index}\n            />\n          );\n        })}\n        <Button\n          className=\"add-ingredient-btn steps-btn\"\n          type=\"button\"\n          onClick={addStep}\n        >\n          Add steps\n          <img src=\"./addRecipe/plus.png\" alt=\"+\" />\n        </Button>\n        <Form.Group className=\"upload-img mt-3\">\n          <Form.File\n            name=\"picture\"\n            label=\"Upload a picture\"\n            className=\"file\"\n            onChange={handleFileUpload}\n            required\n          />\n          <img src={recipeImage} alt=\"\" />\n        </Form.Group>\n\n        <Button className=\"add-recipe-btn\" type=\"submit\" disabled={disabled}>\n          Submit your Recipe\n        </Button>\n      </Form>\n      <img\n        className=\"add-recipe-img\"\n        src=\"./addRecipe/add_recipe.jpg\"\n        alt=\"add-recipe\"\n      />\n      <BounceLoader\n        css={override}\n        size={80}\n        color={\"#B73032\"}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default AddRecipe;\n","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/ingredient.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/libs/utils.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/libs/cuisine.js",["95"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/RegistrationCarousel.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Conteaxts/autoConteaxt.js",["96","97"],"import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { useHistory } from 'react-router-dom';\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n\treturn useContext(AuthContext);\n};\n\nexport const AutoProvider = ({ children }) => {\n\tconst [currentUser, setCurrentUser] = useState();\n\tconst [loading, setLoading] = useState(true);\n\tconst history = useHistory();\n\tconst baseUrl = 'http://localhost:5000';\n\n\t//signUp\n\tconst signupUser = async (formInfo) => {\n\t\t//Todo: Submitting the form to a server\n\t\t// console.log(formInfo);\n\t\ttry {\n\t\t\tconsole.log('before', formInfo);\n\t\t\tconst res = await axios.post(`${baseUrl}/auth/signup`, formInfo);\n\t\t\tconsole.log(res.data.user);\n\t\t\tif (res.data) {\n\t\t\t\tlocalStorage.setItem('token', res.data);\n\t\t\t\tconst user = jwt_decode(res.data).user;\n\t\t\t\tlocalStorage.setItem('user', user._id);\n\t\t\t\tsetCurrentUser(user);\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\treturn error;\n\t\t}\n\t};\n\n\t//login\n\tconst hendaleLogin = async (formInfo) => {\n\t\ttry {\n\t\t\tconst res = await axios.post(`${baseUrl}/auth/login`, formInfo);\n\t\t\tif (res.data) {\n\t\t\t\tlocalStorage.setItem('token', res.data);\n\t\t\t\tconst user = jwt_decode(res.data).user;\n\t\t\t\tlocalStorage.setItem('user', user._id);\n\t\t\t\tsetCurrentUser(user);\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\t// const userst = localStorage.getItem('token');\n\t\t// console.log(jwt_decode(userst));\n\t\t// setCurrentUser(jwt_decode(userst));\n\t}, []);\n\t//Logout\n\tconst logOut = () => {\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('user');\n\t\tsetCurrentUser();\n\t\thistory.push('/');\n\t};\n\n\t//get user info\n\tconst userInfo = async (id) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(`${baseUrl}/users/${id}`);\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\t//update user info\n\tconst updateUserInfo = async (id, formInfo) => {\n\t\ttry {\n\t\t\tconst res = await axios.put(`${baseUrl}/users/${id}`, formInfo);\n\t\t\tif (res.data) {\n\t\t\t\treturn res.data;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\t//remove user\n\tconst removeUser = async (uId) => {\n\t\ttry {\n\t\t\tconst res = await axios.delete(`${baseUrl}/user/${uId}`);\n\t\t\treturn res.data;\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\t//get all the recipes\n\tconst getAllRecipes = async (id) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(`${baseUrl}/user/${id}`);\n\t\t\treturn res.data;\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\t// update recipe\n\tconst UpdateRecipe = async (id, formInfo) => {\n\t\ttry {\n\t\t\tconst res = await axios.put(`${baseUrl}/user/${id}`, formInfo);\n\t\t\tif (res.data) {\n\t\t\t\treturn res.data;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\t//get recipe by Id\n\tconst getRecipe = async (id) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(`${baseUrl}/recipes/${id}`);\n\t\t\tconst data = res.data;\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\n  //add recipe\n  const addRecipe = async (content) => {\n    try {\n      const userId = localStorage.getItem(\"user\");\n      const res = await axios.post(`${baseUrl}/recipes/`, content);\n      if (res.data) {\n        const recipeId = res.data._id;\n        await axios.put(\n          `${baseUrl}/users/myRecipes/${userId}/${recipeId}`,\n          recipeId\n        );\n\n\n\t\t\t\treturn res.data;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\t// remove recipe\n\tconst removeRecipe = async (id) => {\n\t\ttry {\n\t\t\tconst res = await axios.delete(`${baseUrl}/recipes/${id}`);\n\t\t\treturn res.data;\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\t// add or remove like to recipe\n\tconst addOrRemoveLike = async (id, likes) => {\n\t\ttry {\n\t\t\tconst res = await axios.put(`${baseUrl}/recipes/likes/${id}`, likes);\n\t\t\treturn res.data;\n\t\t} catch (err) {\n\t\t\treturn err.response.data;\n\t\t}\n\t};\n\n\tconst value = {\n\t\tcurrentUser,\n\t\tsignupUser,\n\t\thendaleLogin,\n\t\tlogOut,\n\t\tuserInfo,\n\t\tupdateUserInfo,\n\t\tremoveUser,\n\t\tUpdateRecipe,\n\t\tgetAllRecipes,\n\t\tgetRecipe,\n\t\taddRecipe,\n\t\tremoveRecipe,\n\t\taddOrRemoveLike,\n\t};\n\n\treturn <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n","/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/ProfileSettings.js",["98","99","100","101","102","103","104","105","106","107"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/MyRecipes.js",["108","109"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/MyRecipesCard.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/PPTypesOfCuisines.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselCulinaryLevel.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselSignUp.js",["110","111"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselTypesOfCuisines.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/CarouselSpecialDiets.js",[],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/NavigationBar.js",["112","113","114","115"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/SavedRecipes.js",["116","117"],"/Users/Laura/Desktop/Cook.Eat-app-group-assignment/cook.eat-front-end/src/Components/RecipeCard.js",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":14,"column":11,"nodeType":"125","messageId":"126","endLine":14,"endColumn":21},{"ruleId":"123","severity":1,"message":"127","line":15,"column":9,"nodeType":"125","messageId":"126","endLine":15,"endColumn":16},{"ruleId":"123","severity":1,"message":"128","line":15,"column":18,"nodeType":"125","messageId":"126","endLine":15,"endColumn":28},{"ruleId":"123","severity":1,"message":"129","line":16,"column":10,"nodeType":"125","messageId":"126","endLine":16,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":23,"column":8,"nodeType":"125","messageId":"126","endLine":23,"endColumn":18},{"ruleId":"123","severity":1,"message":"130","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"129","line":41,"column":11,"nodeType":"125","messageId":"126","endLine":41,"endColumn":19},{"ruleId":"123","severity":1,"message":"131","line":41,"column":35,"nodeType":"125","messageId":"126","endLine":41,"endColumn":41},{"ruleId":"123","severity":1,"message":"132","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"127","line":13,"column":9,"nodeType":"125","messageId":"126","endLine":13,"endColumn":16},{"ruleId":"123","severity":1,"message":"128","line":13,"column":18,"nodeType":"125","messageId":"126","endLine":13,"endColumn":28},{"ruleId":"123","severity":1,"message":"133","line":5,"column":41,"nodeType":"125","messageId":"126","endLine":5,"endColumn":49},{"ruleId":"123","severity":1,"message":"134","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":25},{"ruleId":"123","severity":1,"message":"135","line":69,"column":9,"nodeType":"125","messageId":"126","endLine":69,"endColumn":22},{"ruleId":"123","severity":1,"message":"136","line":73,"column":8,"nodeType":"125","messageId":"126","endLine":73,"endColumn":28},{"ruleId":"123","severity":1,"message":"137","line":79,"column":8,"nodeType":"125","messageId":"126","endLine":79,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":101,"column":5,"nodeType":"140","endLine":101,"endColumn":7,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":152,"column":8,"nodeType":"144","endLine":152,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":163,"column":8,"nodeType":"144","endLine":163,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":178,"column":8,"nodeType":"144","endLine":178,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":179,"column":8,"nodeType":"144","endLine":179,"endColumn":16},{"ruleId":"123","severity":1,"message":"145","line":12,"column":11,"nodeType":"125","messageId":"126","endLine":12,"endColumn":15},{"ruleId":"138","severity":1,"message":"146","line":31,"column":6,"nodeType":"140","endLine":31,"endColumn":8,"suggestions":"147"},{"ruleId":"123","severity":1,"message":"148","line":15,"column":20,"nodeType":"125","messageId":"126","endLine":15,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":146,"column":7,"nodeType":"151","endLine":146,"endColumn":79},{"ruleId":"123","severity":1,"message":"152","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"153","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"154","line":4,"column":23,"nodeType":"125","messageId":"126","endLine":4,"endColumn":34},{"ruleId":"123","severity":1,"message":"155","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":21},{"ruleId":"123","severity":1,"message":"145","line":10,"column":13,"nodeType":"125","messageId":"126","endLine":10,"endColumn":17},{"ruleId":"138","severity":1,"message":"146","line":28,"column":8,"nodeType":"140","endLine":28,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":8,"column":11,"nodeType":"151","endLine":8,"endColumn":45},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'handleShow' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'register' is assigned a value but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","'React' is defined but never used.","'Carousel' is defined but never used.","'CountryDropdown' is defined but never used.","'carouselIndex' is assigned a value but never used.","'handleCarouselSelect' is assigned a value but never used.","'handleChangeSpecialDiet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formInfo' and 'loadUserInfo'. Either include them or remove the dependency array.","ArrayExpression",["161"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["162"],"'handleSubmit' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'useHistory' is defined but never used.","'NavDropdown' is defined but never used.","'FaHamburger' is defined but never used.",["163"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},"Update the dependencies array to be: [formInfo, loadUserInfo]",{"range":"169","text":"170"},"Update the dependencies array to be: [getUser]",{"range":"171","text":"172"},{"range":"173","text":"172"},[2592,2594],"[formInfo, loadUserInfo]",[622,624],"[getUser]",[710,712]]