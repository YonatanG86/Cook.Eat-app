[{"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\reportWebVitals.js":"1","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ingredient.js":"2","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MultiFormSignUp.js":"3","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipePage.jsx":"4","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\libs\\utils.js":"5","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js":"6","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\Recipe.js":"7","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\NavigationBar.js":"8","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\libs\\cuisine.js":"9"},{"size":375,"mtime":1610885366645,"results":"10","hashOfConfig":"11"},{"size":1512,"mtime":1611582104154,"results":"12","hashOfConfig":"11"},{"size":4944,"mtime":1611576644130,"results":"13","hashOfConfig":"11"},{"size":3836,"mtime":1611588442877,"results":"14","hashOfConfig":"11"},{"size":936,"mtime":1611574510713,"results":"15","hashOfConfig":"11"},{"size":11388,"mtime":1611582517873,"results":"16","hashOfConfig":"11"},{"size":196,"mtime":1611580748449,"results":"17","hashOfConfig":"11"},{"size":3115,"mtime":1611576644132,"results":"18","hashOfConfig":"11"},{"size":3795,"mtime":1611588209383,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1izsahz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\reportWebVitals.js",[],["40","41"],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ingredient.js",[],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MultiFormSignUp.js",["42","43"],"import React, { useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAuth } from '../Conteaxts/autoConteaxt';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n\r\nconst formFields = {\r\n\tuserName: '',\r\n\temail: '',\r\n\tpassword: '',\r\n\trepatePass: '',\r\n};\r\n\r\nconst MultiFormSignUp = () => {\r\n\tconst { register, handleSubmit, errors, watch } = useForm();\r\n\tconst [formInfo, setFormInfo] = useState(formFields);\r\n\tconst [file, setFile] = useState();\r\n\tconst [userImage, setUserImage] = useState();\r\n\tconst { signupUser } = useAuth();\r\n\tconst password = useRef({});\r\n\tpassword.current = watch('password');\r\n\r\n\tconst types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetFormInfo({\r\n\t\t\t...formInfo,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleFileUpload = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tif (file && types.includes(file.type)) {\r\n\t\t\tsetFile(file);\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onload = (e) => {\r\n\t\t\t\tsetUserImage(e.target.result);\r\n\t\t\t};\r\n\t\t\treader.readAsDataURL(e.target.files[0]);\r\n\t\t} else {\r\n\t\t\talert('Please select an image file (png, jpg,jpeg)!');\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(formInfo);\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('data', JSON.stringify(formInfo));\r\n\t\tformData.append('petImage', file);\r\n\t\tsignupUser(formInfo);\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form onSubmit={onSubmit}>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridUsername'>\r\n\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='userName'\r\n\t\t\t\t\t\ttype='username'\r\n\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tminLength='2'\r\n\t\t\t\t\t\tmaxLength='15'\r\n\t\t\t\t\t\tref={register({ pattern: /^[A-Za-z\\s]+$/i })}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='error-box'>\r\n\t\t\t\t\t\t{errors.userName && errors.userName.type === 'pattern' && (\r\n\t\t\t\t\t\t\t<p className='error-field'>English letters only</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>Username required</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t// ref={register({\r\n\t\t\t\t\t\t// \tpattern: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\r\n\t\t\t\t\t\t// })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='error-box'>\r\n\t\t\t\t\t\t{errors.email && errors.email.type === 'pattern' && (\r\n\t\t\t\t\t\t\t<p className='error-field'>Invalid email</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>Email required</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridPassword'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t// ref={register({ pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>Password required</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridConfirmPassword'>\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='repatePass'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Confirm Password'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t// ref={register({\r\n\t\t\t\t\t\t// \tvalidate: (value) => value === password.current || 'The passwords do not match',\r\n\t\t\t\t\t\t// })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.repatePass && <p className='error-field'>{errors.repatePass.message}</p>}\r\n\t\t\t\t\t<div className='error-box'>\r\n\t\t\t\t\t\t{errors.password && errors.password.type === 'pattern' && (\r\n\t\t\t\t\t\t\t<p className='error-field'>\r\n\t\t\t\t\t\t\t\tPassword must contain : <br />\r\n\t\t\t\t\t\t\t\t- at least 8 characters <br />\r\n\t\t\t\t\t\t\t\t- must contain at least 1 uppercase letter,\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t1 lowercase letter, and 1 number\r\n\t\t\t\t\t\t\t\t<br />- Can contain special characters\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>The password is empty or doesn't match</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Profile Image</Form.Label>\r\n\t\t\t\t\t<Form.Control name='picture' type='file' placeholder='Avater' onChange={handleFileUpload} />\r\n\t\t\t\t\t<img src={userImage} style={{ maxWidth: '5rem' }} alt='profile-image' />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<div className='button-container'>\r\n\t\t\t\t\t<Button className='signup-btn btn-primary btn-block' type='submit'>\r\n\t\t\t\t\t\tSign up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className='disclaimer'>\r\n\t\t\t\t\t\tBy continuing you agree to Cook.Eat's Terms of Service &amp; Privacy Policy.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MultiFormSignUp;\r\n","C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipePage.jsx",["44","45","46","47"],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\libs\\utils.js",[],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js",["48","49","50","51"],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\Recipe.js",[],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\NavigationBar.js",["52","53"],"C:\\Users\\yuval\\Desktop\\ITC\\Cook.Eat\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\libs\\cuisine.js",["54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":14,"column":20,"nodeType":"61","messageId":"62","endLine":14,"endColumn":32},{"ruleId":"63","severity":1,"message":"64","line":142,"column":6,"nodeType":"65","endLine":142,"endColumn":78},{"ruleId":"59","severity":1,"message":"66","line":3,"column":46,"nodeType":"61","messageId":"62","endLine":3,"endColumn":58},{"ruleId":"59","severity":1,"message":"67","line":13,"column":13,"nodeType":"61","messageId":"62","endLine":13,"endColumn":17},{"ruleId":"59","severity":1,"message":"68","line":13,"column":19,"nodeType":"61","messageId":"62","endLine":13,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":44,"column":8,"nodeType":"71","endLine":44,"endColumn":20,"suggestions":"72"},{"ruleId":"59","severity":1,"message":"73","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"74","line":28,"column":11,"nodeType":"61","messageId":"62","endLine":28,"endColumn":19},{"ruleId":"59","severity":1,"message":"75","line":28,"column":35,"nodeType":"61","messageId":"62","endLine":28,"endColumn":41},{"ruleId":"59","severity":1,"message":"76","line":136,"column":9,"nodeType":"61","messageId":"62","endLine":136,"endColumn":22},{"ruleId":"59","severity":1,"message":"77","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"78","line":2,"column":16,"nodeType":"61","messageId":"62","endLine":2,"endColumn":26},{"ruleId":"59","severity":1,"message":"79","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":13},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'FaPizzaSlice' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'useEffect' is defined but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'notifySuccess' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [countLikes, getRecipe]",{"range":"85","text":"86"},[1352,1364],"[countLikes, getRecipe]"]