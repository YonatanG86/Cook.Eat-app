[{"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\index.js":"1","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MultiFormSignUp.js":"2","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Conteaxts\\autoConteaxt.js":"3","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ProfileSettings.js":"4","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\LoginModal.js":"5","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\HomePage.js":"6","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SignUpModal.js":"7","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SavedRecipes.js":"8","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipePage.jsx":"9","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\reportWebVitals.js":"10","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MyRecipes.js":"11","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\NavigationBar.js":"12","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\libs\\utils.js":"13","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipeCard.js":"14","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js":"15"},{"size":302,"mtime":1610876889222,"results":"16","hashOfConfig":"17"},{"size":4944,"mtime":1611578818054,"results":"18","hashOfConfig":"17"},{"size":4390,"mtime":1611675772163,"results":"19","hashOfConfig":"17"},{"size":9852,"mtime":1611651871274,"results":"20","hashOfConfig":"17"},{"size":3209,"mtime":1611651871273,"results":"21","hashOfConfig":"17"},{"size":1498,"mtime":1611651871272,"results":"22","hashOfConfig":"17"},{"size":1181,"mtime":1611651871278,"results":"23","hashOfConfig":"17"},{"size":300,"mtime":1611509646931,"results":"24","hashOfConfig":"17"},{"size":4744,"mtime":1611652138401,"results":"25","hashOfConfig":"17"},{"size":375,"mtime":1610876889223,"results":"26","hashOfConfig":"17"},{"size":517,"mtime":1611651838892,"results":"27","hashOfConfig":"17"},{"size":2548,"mtime":1611591451302,"results":"28","hashOfConfig":"17"},{"size":1300,"mtime":1611651871280,"results":"29","hashOfConfig":"17"},{"size":464,"mtime":1611651871275,"results":"30","hashOfConfig":"17"},{"size":11616,"mtime":1611675892325,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1obo727",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\index.js",[],["68","69"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MultiFormSignUp.js",["70","71"],"import React, { useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAuth } from '../Conteaxts/autoConteaxt';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n\r\nconst formFields = {\r\n\tuserName: '',\r\n\temail: '',\r\n\tpassword: '',\r\n\trepatePass: '',\r\n};\r\n\r\nconst MultiFormSignUp = () => {\r\n\tconst { register, handleSubmit, errors, watch } = useForm();\r\n\tconst [formInfo, setFormInfo] = useState(formFields);\r\n\tconst [file, setFile] = useState();\r\n\tconst [userImage, setUserImage] = useState();\r\n\tconst { signupUser } = useAuth();\r\n\tconst password = useRef({});\r\n\tpassword.current = watch('password');\r\n\r\n\tconst types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetFormInfo({\r\n\t\t\t...formInfo,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleFileUpload = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tif (file && types.includes(file.type)) {\r\n\t\t\tsetFile(file);\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\treader.onload = (e) => {\r\n\t\t\t\tsetUserImage(e.target.result);\r\n\t\t\t};\r\n\t\t\treader.readAsDataURL(e.target.files[0]);\r\n\t\t} else {\r\n\t\t\talert('Please select an image file (png, jpg,jpeg)!');\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(formInfo);\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('data', JSON.stringify(formInfo));\r\n\t\tformData.append('petImage', file);\r\n\t\tsignupUser(formInfo);\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form onSubmit={onSubmit}>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridUsername'>\r\n\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='userName'\r\n\t\t\t\t\t\ttype='username'\r\n\t\t\t\t\t\tplaceholder='Enter username'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tminLength='2'\r\n\t\t\t\t\t\tmaxLength='15'\r\n\t\t\t\t\t\tref={register({ pattern: /^[A-Za-z\\s]+$/i })}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='error-box'>\r\n\t\t\t\t\t\t{errors.userName && errors.userName.type === 'pattern' && (\r\n\t\t\t\t\t\t\t<p className='error-field'>English letters only</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>Username required</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t// ref={register({\r\n\t\t\t\t\t\t// \tpattern: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\r\n\t\t\t\t\t\t// })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='error-box'>\r\n\t\t\t\t\t\t{errors.email && errors.email.type === 'pattern' && (\r\n\t\t\t\t\t\t\t<p className='error-field'>Invalid email</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>Email required</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridPassword'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t// ref={register({ pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>Password required</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridConfirmPassword'>\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname='repatePass'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Confirm Password'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t// ref={register({\r\n\t\t\t\t\t\t// \tvalidate: (value) => value === password.current || 'The passwords do not match',\r\n\t\t\t\t\t\t// })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{errors.repatePass && <p className='error-field'>{errors.repatePass.message}</p>}\r\n\t\t\t\t\t<div className='error-box'>\r\n\t\t\t\t\t\t{errors.password && errors.password.type === 'pattern' && (\r\n\t\t\t\t\t\t\t<p className='error-field'>\r\n\t\t\t\t\t\t\t\tPassword must contain : <br />\r\n\t\t\t\t\t\t\t\t- at least 8 characters <br />\r\n\t\t\t\t\t\t\t\t- must contain at least 1 uppercase letter,\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t1 lowercase letter, and 1 number\r\n\t\t\t\t\t\t\t\t<br />- Can contain special characters\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Control.Feedback type='invalid'>The password is empty or doesn't match</Form.Control.Feedback>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Profile Image</Form.Label>\r\n\t\t\t\t\t<Form.Control name='picture' type='file' placeholder='Avater' onChange={handleFileUpload} />\r\n\t\t\t\t\t<img src={userImage} style={{ maxWidth: '5rem' }} alt='profile-image' />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<div className='button-container'>\r\n\t\t\t\t\t<Button className='signup-btn btn-primary btn-block' type='submit'>\r\n\t\t\t\t\t\tSign up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className='disclaimer'>\r\n\t\t\t\t\t\tBy continuing you agree to Cook.Eat's Terms of Service &amp; Privacy Policy.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MultiFormSignUp;\r\n","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Conteaxts\\autoConteaxt.js",["72","73"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\ProfileSettings.js",["74","75","76","77","78","79","80","81","82"],"import React, { useState } from \"react\";\r\nimport CarouselTypesOfCuisines from './CarouselTypesOfCuisines';\r\nimport CarouselCulinaryLevel from './CarouselCulinaryLevel';\r\nimport CarouselSpecialDiets from '../Components/CarouselSpecialDiets';\r\nimport '../styles/ProfileSettings.css';\r\nimport { Col, Row, Form, Button, Image, Carousel } from \"react-bootstrap\";\r\nimport { CountryDropdown } from \"react-country-region-selector\";\r\nimport GlutenFree from \"../img/special-diets/gluten-free.png\";\r\nimport Halal from '../img/special-diets/halal.png';\r\nimport Keto from \"../img/special-diets/keto.png\";\r\nimport Kosher from '../img/special-diets/kosher.png';\r\nimport Paleo from '../img/special-diets/paleo.png';\r\nimport Pescaterian from '../img/special-diets/pescaterian.png';\r\nimport Vegeterian from '../img/special-diets/vegeterian.png';\r\nimport Vegan from '../img/special-diets/vegan.png';\r\n\r\n\r\nconst ProfileSettings = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [carouselIndex, setCarouselIndex] = useState(0);\r\n    // const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleCarouselSelect = (selectedIndex, event) => {\r\n      setCarouselIndex(selectedIndex);\r\n  };\r\n    \r\n    return (\r\n        <div className=\"profile-settings-pagewrapper\">\r\n          <h4>Profile Settings</h4>\r\n          <Form className=\"profile-settings-form\" onSubmit>\r\n            <h6>Edit Profile Settings</h6>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  className=\"form-input\"\r\n                  name=\"username\"\r\n                  type=\"username\"\r\n                  placeholder=\"Username\"\r\n                  value={username}\r\n                  onChange />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"dob\">\r\n                <Form.Label>Birth Date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  placeholder=\"Date of Birth\"\r\n                  value={date}\r\n                  onChange />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  className=\"form-input\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  className=\"form-input\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <div className=\"country-select-container\">\r\n              <CountryDropdown\r\n                value={country}\r\n                onChange >\r\n              </CountryDropdown>\r\n            </div>\r\n\r\n            <div className=\"edit-avatar-container\">\r\n              <div className=\"avatar\">\r\n                <Image\r\n                  width={185}\r\n                  height={180}\r\n                  alt=\"171x180\"\r\n                  src=\"https://i2.wp.com/www.eatthis.com/wp-content/uploads/2020/05/chef-cooking.jpg?fit=1200%2C879&ssl=1\" roundedCircle\r\n                />\r\n              </div>\r\n              <div className=\"file-input-edit-avatar\">\r\n                <Form.File id=\"formcheck-api-regular\">\r\n                <Form.File.Label>Edit Avatar</Form.File.Label>\r\n                <Form.File.Input />\r\n                </Form.File>\r\n              </div>\r\n            </div>\r\n\r\n            <h6 id=\"culinary-preferences\">Edit Culinary Preferences</h6>\r\n              <div className=\"preferences-container\">\r\n                <div className=\"diets-container\">\r\n                  <fieldset>\r\n                    <Form.Group as={Row}>\r\n                      <Form.Label as=\"legend\" column sm={5}>\r\n                        Special Diets\r\n                      </Form.Label>\r\n                      <Col sm={7} id=\"diets-checkbox-column\">\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          name=\"typeOfDiet\"\r\n                          id=\"typeOfDiet1\"\r\n                          label=\r\n                          {<div>Gluten-Free\r\n                            <img\r\n                            alt=\"logo\"\r\n                            src={GlutenFree}\r\n                            className=\"diet-images\"/>\r\n                            </div>}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet2\"\r\n                            label=\r\n                            {<div>Halal\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Halal}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet3\"\r\n                            label=\r\n                            {<div>Keto\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Keto}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                            />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet4\"\r\n                            label=\r\n                            {<div>Kosher\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Kosher}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet5\"\r\n                            label=\r\n                            {<div>Paleo\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Paleo}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet6\"\r\n                            label=\r\n                            {<div>Pescaterian\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Pescaterian}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet7\"\r\n                            label=\r\n                            {<div>Vegeterian\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Vegeterian}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                          />\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            name=\"typeOfDiet\"\r\n                            id=\"typeOfDiet8\"\r\n                            label=\r\n                            {<div>Vegan\r\n                              <img\r\n                              alt=\"logo\"\r\n                              src={Vegan}\r\n                              className=\"diet-images\"/>\r\n                              </div>}\r\n                            />\r\n                        </Col>\r\n                      </Form.Group>\r\n                    </fieldset>\r\n                  </div>\r\n\r\n              <div className=\"culinary-level-form-container\">\r\n                <p>Culinary Level</p>   \r\n                <CarouselCulinaryLevel />\r\n              </div>\r\n            </div>\r\n\r\n            <p>Types of cuisines</p>\r\n            {/* <CarouselSpecialDiets /> */}\r\n            <CarouselTypesOfCuisines />\r\n\r\n            {/* <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                name=\"checkbox\"\r\n                label=\"Save Profile Changes\"\r\n                checked={isChecked}\r\n                onChange={(event) => {setIsChecked(event.target.checked)}} />\r\n            </Form.Group> */}\r\n            \r\n            <div className=\"button-container\">\r\n              <Button\r\n                className=\"save-profile-button\"\r\n                controlId=\"save-profile-button\"\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                // disabled={isChecked ? false : true}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </div>\r\n\r\n          </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSettings;","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\LoginModal.js",["83","84","85","86"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\HomePage.js",["87","88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../Components/Search\";\r\nimport RegistrationCarousel from \"../Components/RegistrationCarousel\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport mockRecipes from \"../mockdata/mockRecipes\";\r\nimport \"../styles/HomePage.css\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { useAuth } from \"../Conteaxts/autoConteaxt\";\r\n\r\n// map [{name:1},{name:2}] -> [<RecipeCard />, <RecipeCard />]\r\nconst HomePage = () => {\r\n  const { currentUser } = useAuth;\r\n  const [recipes, setRecipes] = useState([]);\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"user\");\r\n\tconsole.log(user);\r\n\tasync function searchRecipes() {\r\n\t\tconst res = await fetch(`http://localhost:5000/recipes`);\r\n\t\tconst data = await res.json();\r\n\t\tconsole.log('data',data);\r\n\t\tsetRecipes(data);\r\n\t  }\r\n\t  searchRecipes()\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepage-wrapper\">\r\n      <div className=\"banner\">\r\n        <div className=\"banner-content\">\r\n          <h4>Find A Recipe</h4>\r\n          <div className=\"search-bar\">\r\n            <Search setRecipes={setRecipes} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"recipes\">\r\n        {recipes.map(function (recipe, i) {\r\n          console.log(\"recipe\", recipe);\r\n          return <RecipeCard key={i} recipe={recipe} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n",["94","95"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SignUpModal.js",["96"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\SavedRecipes.js",[],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipePage.jsx",[],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\MyRecipes.js",[],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\NavigationBar.js",["97","98","99"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\libs\\utils.js",["100"],"const BASE_URL = 'http://localhost:5000'\r\n\r\nconst loadRecipe = async(id) => {\r\n    const response = await fetch(`${BASE_URL}/recipes/${id}`)\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nconst addRecipeToProfile = async(userId, recipeId) => {\r\n    const response = await fetch(`${BASE_URL}/users/likes/${userId}`,{\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }, \r\n        body: JSON.stringify({recipeId})\r\n    })\r\n    if(response.status === 200){\r\n        const result = await response.text()\r\n        return result\r\n    } else {\r\n        return \r\n    }\r\n}\r\n\r\nconst likeRecipe = async(id, likes) => {\r\n    const response = await fetch(`${BASE_URL}/recipes/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }, \r\n        body: JSON.stringify({likes})\r\n    })\r\n    const result = await response.json()\r\n    return result    \r\n}\r\n\r\nconst getMyRecipes = async(id) => {\r\n    const response = await fetch(`${BASE_URL}/recipes/myRecipes/${id}`)\r\n    let data = await response.json()\r\n    if (data.length < 1){\r\n        data = null\r\n    }\r\n    return data\r\n}\r\n\r\nconst getSavedRecipes = async(id) => {}\r\n\r\n\r\nexport { addRecipeToProfile, likeRecipe, loadRecipe, getMyRecipes }","C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\RecipeCard.js",["101"],"C:\\Users\\isaya\\OneDrive\\שולחן העבודה\\itcCourse\\Cook.Eat-app-group-assignment\\cook.eat-front-end\\src\\Components\\AddRecipe.js",["102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":14,"column":20,"nodeType":"111","messageId":"112","endLine":14,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":142,"column":6,"nodeType":"115","endLine":142,"endColumn":78},{"ruleId":"109","severity":1,"message":"116","line":13,"column":10,"nodeType":"111","messageId":"112","endLine":13,"endColumn":17},{"ruleId":"109","severity":1,"message":"117","line":13,"column":19,"nodeType":"111","messageId":"112","endLine":13,"endColumn":29},{"ruleId":"109","severity":1,"message":"118","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":28},{"ruleId":"109","severity":1,"message":"119","line":6,"column":41,"nodeType":"111","messageId":"112","endLine":6,"endColumn":49},{"ruleId":"109","severity":1,"message":"120","line":19,"column":19,"nodeType":"111","messageId":"112","endLine":19,"endColumn":27},{"ruleId":"109","severity":1,"message":"121","line":20,"column":22,"nodeType":"111","messageId":"112","endLine":20,"endColumn":33},{"ruleId":"109","severity":1,"message":"122","line":21,"column":22,"nodeType":"111","messageId":"112","endLine":21,"endColumn":33},{"ruleId":"109","severity":1,"message":"123","line":22,"column":18,"nodeType":"111","messageId":"112","endLine":22,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":23,"column":21,"nodeType":"111","messageId":"112","endLine":23,"endColumn":31},{"ruleId":"109","severity":1,"message":"125","line":24,"column":12,"nodeType":"111","messageId":"112","endLine":24,"endColumn":25},{"ruleId":"109","severity":1,"message":"126","line":27,"column":11,"nodeType":"111","messageId":"112","endLine":27,"endColumn":31},{"ruleId":"109","severity":1,"message":"116","line":15,"column":9,"nodeType":"111","messageId":"112","endLine":15,"endColumn":16},{"ruleId":"109","severity":1,"message":"117","line":15,"column":18,"nodeType":"111","messageId":"112","endLine":15,"endColumn":28},{"ruleId":"109","severity":1,"message":"127","line":16,"column":10,"nodeType":"111","messageId":"112","endLine":16,"endColumn":18},{"ruleId":"109","severity":1,"message":"128","line":23,"column":8,"nodeType":"111","messageId":"112","endLine":23,"endColumn":18},{"ruleId":"109","severity":1,"message":"129","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":28},{"ruleId":"109","severity":1,"message":"130","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":19},{"ruleId":"109","severity":1,"message":"131","line":7,"column":10,"nodeType":"111","messageId":"112","endLine":7,"endColumn":20},{"ruleId":"109","severity":1,"message":"132","line":7,"column":22,"nodeType":"111","messageId":"112","endLine":7,"endColumn":33},{"ruleId":"109","severity":1,"message":"133","line":7,"column":35,"nodeType":"111","messageId":"112","endLine":7,"endColumn":41},{"ruleId":"109","severity":1,"message":"134","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":18},{"ruleId":"109","severity":1,"message":"135","line":13,"column":11,"nodeType":"111","messageId":"112","endLine":13,"endColumn":22},{"ruleId":"105","replacedBy":"136"},{"ruleId":"107","replacedBy":"137"},{"ruleId":"109","severity":1,"message":"128","line":13,"column":11,"nodeType":"111","messageId":"112","endLine":13,"endColumn":21},{"ruleId":"109","severity":1,"message":"138","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"139","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"140","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":19},{"ruleId":"109","severity":1,"message":"141","line":46,"column":7,"nodeType":"111","messageId":"112","endLine":46,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":8,"column":11,"nodeType":"115","endLine":8,"endColumn":45},{"ruleId":"109","severity":1,"message":"144","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"127","line":28,"column":11,"nodeType":"111","messageId":"112","endLine":28,"endColumn":19},{"ruleId":"109","severity":1,"message":"145","line":28,"column":35,"nodeType":"111","messageId":"112","endLine":28,"endColumn":41},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'CarouselSpecialDiets' is defined but never used.","'Carousel' is defined but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'carouselIndex' is assigned a value but never used.","'handleCarouselSelect' is assigned a value but never used.","'register' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'RegistrationCarousel' is defined but never used.","'mockRecipes' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'BiSearch' is defined but never used.","'currentUser' is assigned a value but never used.",["146"],["147"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'SignUpModal' is defined but never used.","'getSavedRecipes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]